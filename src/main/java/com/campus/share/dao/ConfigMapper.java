package com.campus.share.dao;

import com.campus.share.model.Config;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface ConfigMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table config
     *
     * @mbggenerated
     */
    @Delete({
            "delete from config",
            "where config_id = #{configId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer configId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table config
     *
     * @mbggenerated
     */
    @Insert({
            "insert into config (config_id, config_type, ",
            "config_key, config_value, ",
            "rank, remark)",
            "values (#{configId,jdbcType=INTEGER}, #{configType,jdbcType=VARCHAR}, ",
            "#{configKey,jdbcType=VARCHAR}, #{configValue,jdbcType=VARCHAR}, ",
            "#{rank,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})"
    })
    int insert(Config record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table config
     *
     * @mbggenerated
     */
    @Select({
            "select",
            "config_id, config_type, config_key, config_value, rank, remark",
            "from config",
            "where config_id = #{configId,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column="config_id", property="configId", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="config_type", property="configType", jdbcType=JdbcType.VARCHAR),
            @Result(column="config_key", property="configKey", jdbcType=JdbcType.VARCHAR),
            @Result(column="config_value", property="configValue", jdbcType=JdbcType.VARCHAR),
            @Result(column="rank", property="rank", jdbcType=JdbcType.INTEGER),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    Config selectByPrimaryKey(Integer configId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table config
     *
     * @mbggenerated
     */
    @Select({
            "select",
            "config_id, config_type, config_key, config_value, rank, remark",
            "from config",
            "order by rank asc,config_id asc"
    })
    @Results({
            @Result(column="config_id", property="configId", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="config_type", property="configType", jdbcType=JdbcType.VARCHAR),
            @Result(column="config_key", property="configKey", jdbcType=JdbcType.VARCHAR),
            @Result(column="config_value", property="configValue", jdbcType=JdbcType.VARCHAR),
            @Result(column="rank", property="rank", jdbcType=JdbcType.INTEGER),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    List<Config> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table config
     *
     * @mbggenerated
     */
    @Update({
            "update config",
            "set config_type = #{configType,jdbcType=VARCHAR},",
            "config_key = #{configKey,jdbcType=VARCHAR},",
            "config_value = #{configValue,jdbcType=VARCHAR},",
            "rank = #{rank,jdbcType=INTEGER},",
            "remark = #{remark,jdbcType=VARCHAR}",
            "where config_id = #{configId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Config record);
}